package Vista;

import Control.SQL;
import Modelo.HorasC;
import Modelo.VoluntariosC;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.Timer;
import javax.swing.JOptionPane;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author j_k_h
 */
public class Voluntarios extends javax.swing.JFrame {
Calendar cal=new GregorianCalendar();
    /**
     * Creates new form IniciarSesion
     */
    public Voluntarios() {
        initComponents();
        setIconImage (new ImageIcon(getClass().getResource("/Imagenes/icono.jpeg")).getImage());
        this.setResizable(false);
        timer = new Timer(1000, new crono());
        timer.start();
    }
    
    public class crono implements ActionListener{
       
        public void actionPerformed(ActionEvent evt) {
            GregorianCalendar tiempo = new GregorianCalendar();
            int hora, minutos, segundos;
            hora = tiempo.get(Calendar.HOUR_OF_DAY);
            minutos = tiempo.get(Calendar.MINUTE);
            segundos = tiempo.get(Calendar.SECOND);
            
            
            txtHora.setText(String.valueOf(hora));
            txtMinuto.setText(String.valueOf(minutos));
            txtSegundo.setText(String.valueOf(segundos));
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtfUsuario = new javax.swing.JTextField();
        btnRegistrarEntrada = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtHora = new javax.swing.JLabel();
        txtMinuto = new javax.swing.JLabel();
        txtSegundo = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnRegistrarSalida = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel2.setText("Clave del voluntario:");

        jtfUsuario.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N

        btnRegistrarEntrada.setBackground(new java.awt.Color(10, 76, 142));
        btnRegistrarEntrada.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        btnRegistrarEntrada.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrarEntrada.setText("Registrar Entrada");
        btnRegistrarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarEntradaActionPerformed(evt);
            }
        });

        btnVolver.setBackground(new java.awt.Color(10, 76, 142));
        btnVolver.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(255, 255, 255));
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Logo Ponguinguiola.png"))); // NOI18N

        txtHora.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        txtHora.setText("00");

        txtMinuto.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        txtMinuto.setText("00");

        txtSegundo.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        txtSegundo.setText("00");

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel7.setText(":");

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel8.setText(":");

        btnRegistrarSalida.setBackground(new java.awt.Color(10, 76, 142));
        btnRegistrarSalida.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        btnRegistrarSalida.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrarSalida.setText("Registrar Salida");
        btnRegistrarSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarSalidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(851, 851, 851)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnVolver)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnRegistrarEntrada)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnRegistrarSalida))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(344, 344, 344)
                .addComponent(txtHora)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMinuto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSegundo)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(jLabel4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(109, 287, Short.MAX_VALUE)
                        .addComponent(btnVolver)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHora)
                            .addComponent(txtMinuto)
                            .addComponent(txtSegundo)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRegistrarEntrada)
                            .addComponent(btnRegistrarSalida))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 861, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        new IniciarSesion().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnRegistrarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarEntradaActionPerformed
        VoluntariosC u = new VoluntariosC();
        u.setId(jtfUsuario.getText());
        try {
            u.cargarDatos2(SQL.ejecutaQ(u.buscarID(), this,0));
        } catch (SQLException ex) {
        }
        
        String nombre = u.getNombreCompleto();
        
        if(JOptionPane.showConfirmDialog(null, "Hola "+nombre+"\n ¿Desea registrar su hora de entrada siendo las "+
                txtHora.getText()+":"+txtMinuto.getText()+"?"
                , "Confirmar Entrada", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)==JOptionPane.YES_OPTION){
            entrada(u.getId());
        }
        else{
                }
    }//GEN-LAST:event_btnRegistrarEntradaActionPerformed

    private void btnRegistrarSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarSalidaActionPerformed
        VoluntariosC u = new VoluntariosC();
        u.setId(jtfUsuario.getText());
        try {
            u.cargarDatos2(SQL.ejecutaQ(u.buscarID(), this,0));
        } catch (SQLException ex) {
        }
        
        String nombre = u.getNombreCompleto();
        
        if(JOptionPane.showConfirmDialog(null, "Hola "+nombre+"\n ¿Desea registrar su hora de salida siendo las "+
                txtHora.getText()+":"+txtMinuto.getText()+"?"
                , "Confirmar Salida", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)==JOptionPane.YES_OPTION){
            salida(u.getId());
        }
        else{
                }
    }//GEN-LAST:event_btnRegistrarSalidaActionPerformed

    public void entrada(String newId){
        VoluntariosC c = new VoluntariosC();
        c.setId(jtfUsuario.getText());
        try {
            c.cargarDatos2(SQL.ejecutaQ(c.buscarID(), this,0));
        } catch (SQLException ex) {
        }
        Date date = new Date();
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        
        String diaActual = dateFormat.format(date);
        if(c.getActivo().compareTo("0")==0||c.getActivo().compareTo("")==0){
            
            System.out.println("Fecha: "+dateFormat.format(date));
            String sql="INSERT INTO `ponguibd`.`horas` (`idVoluntario`, `fecha`, `horaEntrada`, `horaSalida`, `tiempoTotal`) "
                    + "VALUES ('"+newId+"', '"+dateFormat.format(date)+"', '"+txtHora.getText()+":"+txtMinuto.getText()+
                    "', '"+"NA"+"', '"+"NA"+"');";
            SQL.ejecuta(sql,this,0);
            System.out.println("Opcion 1 parte 1: "+sql);
            String sql2="UPDATE `ponguibd`.`voluntarios` SET `activo` = '1', `dia` = '"+dateFormat.format(date)+"' WHERE (`id` = '"+newId+"');";
            SQL.ejecuta(sql2,this,0);
            System.out.println("Opcion 1 parte 2: "+sql2);
            

        }
        else if(c.getActivo().compareTo("1")==0&&c.getDia().compareTo(diaActual)!=0){
            JOptionPane.showMessageDialog(this, "No marcaste tu salida la última vez, habla con tu supervisor para solucionar eso", "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(this, "Hora de entrada registrada exitosamente", "Aviso", JOptionPane.OK_OPTION);
            String sql="INSERT INTO `ponguibd`.`horas` (`idVoluntario`, `fecha`, `horaEntrada`, `horaSalida`, `tiempoTotal`) "
                    + "VALUES ('"+newId+"', '"+dateFormat.format(date)+"', '"+txtHora.getText()+":"+txtMinuto.getText()+
                    "', '"+"NA"+"', '"+"NA"+"');";
            SQL.ejecuta(sql,this,0);
            System.out.println("Opcion 2 parte 1: "+sql);
            String sql2="UPDATE `ponguibd`.`voluntarios` SET `activo` = '1', `dia` = '"+dateFormat.format(date)+"' WHERE (`id` = '"+newId+"');";
            SQL.ejecuta(sql2,this,0);
            System.out.println("Opcion 2 parte 2: "+sql2);
        }
        else if(c.getActivo().compareTo("1")==0&&c.getDia().compareTo(dateFormat.format(date))==0){
            JOptionPane.showMessageDialog(this, "Aún no has marcado tu salida", "Aviso", JOptionPane.OK_OPTION);
        }
        
        
    }
    
    public void salida(String newId){
        VoluntariosC c = new VoluntariosC();
        c.setId(jtfUsuario.getText());
        try {
            c.cargarDatos2(SQL.ejecutaQ(c.buscarID(), this,0));
        } catch (SQLException ex) {
        }
        
        if(c.getActivo().compareTo("1")==0){
            Date date = new Date();
            DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            HorasC u = new HorasC();
            u.setIdVoluntario(newId);
            u.setFecha(dateFormat.format(date));
            int error=0;
            try {
                u.cargarDatos2(SQL.ejecutaQ(u.buscarID(), this,0));
            } catch (SQLException ex) {
                
                System.out.println(u.getFecha()+"  "+u.getHoraEntrada()+"  "+u.getHoraSalida()+"  "+u.getIdVoluntario()+"  "+u.getTiempoTotal());
                
            }
            
            if(u.getHoraEntrada()==null){
                JOptionPane.showMessageDialog(this, "No marcaste tu salida la última vez, habla con tu supervisor para solucionar eso", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
            String horaSalida = txtHora.getText()+":"+txtMinuto.getText();
            double tiempoTotal = checarHoras(u.getHoraEntrada(),horaSalida);

            String sql="UPDATE `ponguibd`.`horas` SET `horaSalida` = '"+horaSalida+""
                    + "', `tiempoTotal` = '"+tiempoTotal+"' WHERE (`idVoluntario` = '"+newId+"') AND (`fecha` = '"+u.getFecha()+"') "
                    + "AND (`horaEntrada` = '"+u.getHoraEntrada()+"');";
            SQL.ejecuta(sql,this,0);
            
            String sql2="UPDATE `ponguibd`.`voluntarios` SET `horasContadas` = '"+nuevasHoras(tiempoTotal,newId)+"', `activo` = '0' WHERE (`id` = '"+newId+"');";
            SQL.ejecuta(sql2,this,0);
        }
        else{
            JOptionPane.showMessageDialog(this, "Aún no has marcado tu entrada", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }
    
    public String nuevasHoras(double tiempo, String id){
        VoluntariosC c = new VoluntariosC();
        c.setId(id);
        try {
            c.cargarDatos2(SQL.ejecutaQ(c.buscarID(), this,0));
        } catch (SQLException ex) {
        }
        double horas2 = Double.parseDouble(c.getHorasContadas());
        double horas3 = (horas2+tiempo);
        String horas = horas3+"";
        
        if(c.getArea().compareTo("Centro de acopio.")==0){
            double horasBodega = Double.parseDouble(horas);
            horasBodega = horasBodega*2;
            horas=horasBodega+"";
        }
        return horas;
    }
    
    public double checarHoras(String h1, String h2){
        System.out.println("Entró al proceso");
        String n1="",n2="",n3="",n4="";
        double total=0;
        boolean bandera=false;
        for(int a = 0;a<h1.length();a++){
            String ejemplo = h1.charAt(a)+"";
            if(bandera==false){
                if(ejemplo.compareTo(":")==0){
                    bandera=true;
                }
                else{
                    n1=n1+ejemplo;
                }
            }
            else{
                n2=n2+ejemplo;
            }
        }
        bandera=false;
        for(int a = 0;a<h2.length();a++){
            String ejemplo = h2.charAt(a)+"";
            if(bandera==false){
                if(ejemplo.compareTo(":")==0){
                    bandera=true;
                }
                else{
                    n3=n3+ejemplo;
                }
            }
            else{
                n4=n4+ejemplo;
            }
        }
        double nu1=Integer.parseInt(n1)+.0;
        double nu2=Integer.parseInt(n2)+.0;
        double nu3=Integer.parseInt(n3)+.0;
        double nu4=Integer.parseInt(n4)+.0;
        
        double nu5=nu1+(nu2/60);
        double nu6=nu3+(nu4/60);
        
        total = nu6-nu5;
        total = Math.round(total * 100) / 100d;
        System.out.println(total);
        return total;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IniciarSesion().setVisible(true);
            }
        });
        
    }
    private Timer timer;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrarEntrada;
    private javax.swing.JButton btnRegistrarSalida;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jtfUsuario;
    private javax.swing.JLabel txtHora;
    private javax.swing.JLabel txtMinuto;
    private javax.swing.JLabel txtSegundo;
    // End of variables declaration//GEN-END:variables
}
